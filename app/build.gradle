apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.alibaba.arouter'
android {
    compileSdkVersion defaultConfigs.compileSdkVersion
    buildToolsVersion defaultConfigs.buildToolsVersion
    defaultConfig {
        applicationId "com.android.jasper.jetpack"
        minSdkVersion defaultConfigs.minSdkVersion
        targetSdkVersion defaultConfigs.targetSdkVersion
        versionCode defaultConfigs.versionCode
        versionName defaultConfigs.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
//        flavorDimensions "versionCode"

    }
    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
        debug {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    //资源配置
    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res/resource/home',
                    'src/main/res/resource/main',
                    'src/main/res/resource/paging',
                    'src/main/res/resource/personal',
                    'src/main/res/resource/room',
                    'src/main/res/resource/test',
                    'src/main/res/resource/view_model',
                    'src/main/res',
            ]
        }
    }
    //指定jdk版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['//.jar'])
    implementation 'com.alibaba:arouter-api:1.5.0'
    kapt 'com.alibaba:arouter-compiler:1.2.2'
    implementation "com.mikepenz:materialdrawer:8.1.3"
    //======================================================smart_refresh========================================================
    //核心必须依赖
    implementation "com.scwang.smart:refresh-layout-kernel:${versions.smart_refresh}"
    //经典刷新头
    implementation "com.scwang.smart:refresh-header-classics:${versions.smart_refresh}"
    //雷达刷新头
    implementation "com.scwang.smart:refresh-header-radar:${versions.smart_refresh}"
    //虚拟刷新头
    implementation "com.scwang.smart:refresh-header-falsify:${versions.smart_refresh}"
    //谷歌刷新头
    implementation "com.scwang.smart:refresh-header-material:${versions.smart_refresh}"
    //二级刷新头
    implementation "com.scwang.smart:refresh-header-two-level:${versions.smart_refresh}"
    //球脉冲加载
    implementation "com.scwang.smart:refresh-footer-ball:${versions.smart_refresh}"
    //经典加载
    implementation "com.scwang.smart:refresh-footer-classics:${versions.smart_refresh}"

    implementation 'androidx.multidex:multidex:2.0.1'

    //======================================================room========================================================
    implementation "androidx.room:room-runtime:$versions.room"
    // For Kotlin use kapt instead of annotationProcessor
    kapt "androidx.room:room-compiler:$versions.room"
    //ptional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$versions.room"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$versions.room"
    //optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$versions.room"
    //Test helpers
    testImplementation "android.arch.persistence.room:testing:$versions.room"

    ///

    //======================================================navigation========================================================
    // navigation-fragme kotlin版本
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    // navigation-ui kotlin版本
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"
    // Dynamic Feature Module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$versions.navigation"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$versions.navigation"

    //======================================================paging========================================================
    implementation "androidx.paging:paging-common-ktx:${versions.paging}"
    implementation "androidx.paging:paging-runtime-ktx:${versions.paging}"
    implementation "androidx.paging:paging-rxjava2-ktx:${versions.paging}"
    //======================================================module========================================================
    implementation project(path: ':base')


}
