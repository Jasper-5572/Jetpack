def defaultConfigs = [:]
defaultConfigs.compileSdkVersion = 29
defaultConfigs.buildToolsVersion = "29.0.3"
defaultConfigs.minSdkVersion = 17
defaultConfigs.targetSdkVersion = 29
defaultConfigs.versionCode = 1
defaultConfigs.versionName = "1.0.0"
ext.defaultConfigs = defaultConfigs


def versions = [:]
/**
 * appcompat
 * @dependencies implementation "androidx.appcompat:appcompat:$versions.appcompat"
 */
versions.appcompat = "1.2.0"
/**
 * recyclerview
 * @dependencies implementation "androidx.recyclerview:recyclerview:${versions.recyclerview}"
 */
versions.recyclerview = "1.2.0-alpha05"

/**
 * @dependencies implementation "com.google.android.material:material:$versions.material"
 */
versions.material = '1.2.0'
/**
 * constraintlayout约束布局
 * @dependencies implementation "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"
 */
versions.constraintlayout = "1.1.3"
/**
 * @dependencies testImplementation "junit:junit:4.12"
 * @dependencies androidTestImplementation "androidx.test.ext:junit:1.1.1"
 * @dependencies androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
 */
versions.junit = "4.12"

/**
 * kotlin 基础库及相关库的kotlin扩展
 * @dependencies implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
 *
 * @dependencies testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
 * @dependencies implementation "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
 * @dependencies implementation "androidx.activity:activity-ktx:1.1.0"
 * @dependencies implementation "androidx.fragment:fragment-ktx:1.2.4"
 * @dependencies implementation "androidx.benchmark:benchmark-junit4:1.0.0"
 * @dependencies implementation "androidx.collection:collection-ktx:1.1.0"
 * @dependencies implementation "androidx.dynamicanimation:dynamicanimation-ktx:1.0.0-alpha03"
 * @dependencies implementation "androidx.fragment:fragment-testing:1.2.4"
 */
versions.kotlin = "1.3.72"
/**
 * @dependencies implementation "androidx.core:core-ktx:${versions.kotlin_core}"
 */
versions.kotlin_core = "1.3.1"
/**
 * kotlin协程版本
 * @dependencies implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
 * @dependencies implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
 */
versions.coroutines = "1.3.4"
/**
 * @dependencies implementation "androidx.room:room-runtime:$versions.room"
 *
 * For Kotlin use kapt instead of annotationProcessor
 * @dependencies annotationProcessor "androidx.room:room-compiler:$versions.room"
 *
 * ptional - Kotlin Extensions and Coroutines support for Room
 * @dependencies implementation "androidx.room:room-ktx:$versions.room"
 *
 * optional - RxJava support for Room
 * @dependencies implementation "androidx.room:room-rxjava2:$versions.room"
 *
 * optional - Guava support for Room, including Optional and ListenableFuture
 * @dependencies implementation "androidx.room:room-guava:$versions.room"
 *
 * Test helpers
 * @dependencies testImplementation "android.arch.persistence.room:testing:$versions.room"
 */
versions.room = "2.2.5"
/**
 * lifecycle
 *
 * runtime Lifecycles only (without ViewModel or LiveData) java版本
 * @dependencies implementation"androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
 * runtime  Lifecycles only (without ViewModel or LiveData) (kotlin版本)
 * @dependencies implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
 *
 * Saved state module for ViewModel
 * @dependencies implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycle"
 * extensions
 * @dependencies implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
 *
 * //viewmodel(java版本)
 * @dependencies implementation "androidx.lifecycle:lifecycle-viewmodel:$versions.lifecycle"
 * viewmodel(kotlin版本)
 * @dependencies implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
 *
 * livedata(java版本)
 * @dependencies implementation "androidx.lifecycle:lifecycle-livedata:$versions.lifecycle"
 * livedata(kotlin版本)
 * @dependencies implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
 *
 * lifecycle
 * @dependencies kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
 *
 * if using Java8, use the following instead of lifecycle-compiler
 * @dependencies implementation "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
 *
 * optional - helpers for implementing LifecycleOwner in a Service
 * @dependencies implementation "androidx.lifecycle:lifecycle-service:$versions.lifecycle"
 *
 * optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
 * @dependencies implementation "androidx.lifecycle:lifecycle-process:$versions.lifecycle"
 *
 *  optional - ReactiveStreams support for LiveData java版本
 * @dependencies implementation "androidx.lifecycle:lifecycle-reactivestreams:$versions.lifecycle"
 *  optional - ReactiveStreams support for LiveData kotlin版本
 * @dependencies implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$versions.lifecycle"
 */
versions.lifecycle = "2.2.0"
/**
 * liveData TEST
 * @dependencies implementation "androidx.arch.core:core-testing:$versions.live_data_test"
 */
versions.live_data_test = "2.1.0"
/**
 * navigation
 *
 * navigation-fragment java版本
 * @dependencies implementation "androidx.navigation:navigation-fragment:$versions.navigation"
 * navigation-fragme kotlin版本
 * @dependencies implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
 *
 * navigation-ui java版本
 * @dependencies implementation "androidx.navigation:navigation-ui:$versions.navigation"
 * navigation-ui kotlin版本
 * @dependencies implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"
 *
 * Dynamic Feature Module Support
 * @dependencies implementation "androidx.navigation:navigation-dynamic-features-fragment:$versions.navigation"
 *
 * Testing Navigation
 * @dependencies androidTestImplementation "androidx.navigation:navigation-testing:$versions.navigation"
 */
versions.navigation = '2.3.0'
/**
 * retrofit
 * @dependencies implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
 * @dependencies implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
 * @dependencies implementation "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
 * @dependencies implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
 */
versions.retrofit = "2.9.0"
/**
 * okhttp3
 * @dependencies implementation "com.squareup.okhttp3:okhttp:${versions.okhttp3}"
 * @dependencies implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
 */
versions.okhttp3 = '4.7.2'
/**
 * @dependencies implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
 */
versions.okhttp_logging_interceptor = '4.7.2'

/**
 * @dependencies implementation "androidx.paging:paging-common-ktx:${versions.paging}"
 * @dependencies implementation "androidx.paging:paging-runtime-ktx:${versions.paging}"
 * @dependencies implementation "androidx.paging:paging-rxjava2-ktx:${versions.paging}"
 */
versions.paging = '2.1.2'

/**
 * https://github.com/scwang90/SmartRefreshLayout
 *
 * 核心必须依赖
 * @dependencies implementation  "com.scwang.smart:refresh-layout-kernel:${versions.smart_refresh}"
 *
 * 经典刷新头
 * @dependencies implementation  "com.scwang.smart:refresh-header-classics:${versions.smart_refresh}"
 *
 * 雷达刷新头
 * @dependencies implementation  "com.scwang.smart:refresh-header-radar:${versions.smart_refresh}"
 *
 * 虚拟刷新头
 * @dependencies implementation  "com.scwang.smart:refresh-header-falsify:${versions.smart_refresh}"
 *
 * 谷歌刷新头
 * @dependencies implementation  "com.scwang.smart:refresh-header-material:${versions.smart_refresh}"
 *
 * 二级刷新头
 * @dependencies implementation  "com.scwang.smart:refresh-header-two-level:${versions.smart_refresh}"
 *
 * 球脉冲加载
 * @dependencies implementation  "com.scwang.smart:refresh-footer-ball:${versions.smart_refresh}"
 *
 * 经典加载
 * @dependencies implementation  "com.scwang.smart:refresh-footer-classics:${versions.smart_refresh}"
 */
versions.smart_refresh = "2.0.1"

//
//
//versions.latest = "+"
//versions.support = "28.0.0"
//versions.rxjava2 = "2.1.6"
//versions.rxandroid2 = "2.0.1"
//
//versions.glide = "4.10.0"
//versions.arch_core = "1.1.0"
//versions.dagger = "2.11"
//versions.junit = "4.12"
//versions.espresso = "3.0.1"
//versions.mockwebserver = "3.8.1"
//versions.apache_commons = "2.5"
//versions.mockito = "2.7.19"
//versions.mockito_all = "1.10.19"
//versions.dexmaker = "2.2.0"
//versions.constraint_layout = "1.0.2"
//versions.timber = "4.5.1"
//versions.android_gradle_plugin = "3.0.1"
//versions.atsl_runner = "1.0.1"
//versions.atsl_rules = "1.0.1"
//versions.hamcrest = "1.3"
//versions.paging = "1.0.0-alpha5"
//versions.smartrefresh = "1.0.5"
ext.versions = versions









